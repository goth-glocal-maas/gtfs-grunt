# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-05-24 10:02
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agency_id', models.CharField(max_length=25, verbose_name='agency_id')),
                ('name', models.CharField(max_length=500, verbose_name='Agency Name')),
                ('url', models.CharField(max_length=240, verbose_name='Agency URL')),
                ('timezone', models.CharField(max_length=50, verbose_name='Agency Timezone')),
                ('phone', models.CharField(max_length=50, verbose_name='Agency Phone')),
                ('lang', models.CharField(max_length=10, verbose_name='Agency Language')),
                ('fare_url', models.CharField(max_length=240, verbose_name='Agency URL')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
            ],
            options={
                'verbose_name_plural': 'agencies',
            },
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_id', models.CharField(max_length=25, unique=True, verbose_name='agency_id')),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='Start Date')),
                ('end_date', models.DateField(default=django.utils.timezone.now, verbose_name='Start Date')),
                ('monday', models.BooleanField(default=False, verbose_name='Monday')),
                ('tuesday', models.BooleanField(default=False, verbose_name='Tuesday')),
                ('wednesday', models.BooleanField(default=False, verbose_name='Wednesday')),
                ('thursday', models.BooleanField(default=False, verbose_name='Thursday')),
                ('friday', models.BooleanField(default=False, verbose_name='Friday')),
                ('saturday', models.BooleanField(default=False, verbose_name='Saturday')),
                ('sunday', models.BooleanField(default=False, verbose_name='Sunday')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('exception_type', models.CharField(choices=[('1', 'Add to service'), ('2', 'Remove from service')], default='2', max_length=1, verbose_name='Exception Type')),
            ],
            options={
                'verbose_name_plural': 'Calendar Dates',
            },
        ),
        migrations.CreateModel(
            name='FareAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fare_id', models.CharField(max_length=50, verbose_name='trip_id')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=6, verbose_name='Price')),
                ('currency_type', models.CharField(max_length=3, verbose_name='Currency type')),
                ('payment_method', models.CharField(choices=[('0', 'Fare is paid on board'), ('1', 'Fare must be paid before boarding')], default='0', max_length=1, verbose_name='Payment method')),
                ('transfer', models.CharField(choices=[('', 'unlimited transfers are permitted.'), ('0', 'No transfers permitted on this fare.'), ('1', 'Passenger may transfer once.'), ('2', 'Passenger may transfer twice.')], default='0', max_length=1, verbose_name='Transfer')),
                ('transfer_duration', models.CharField(max_length=2, verbose_name='Transfer duration')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FareRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Frequency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField(verbose_name='Start time')),
                ('end_time', models.TimeField(verbose_name='End time')),
                ('headway_secs', models.IntegerField(verbose_name='Headway seconds')),
                ('exact_times', models.CharField(choices=[('0', 'Frequency-based trips are not exactly scheduled.'), ('1', 'Frequency-based trips are exactly scheduled')], default='0', max_length=1, verbose_name='Exact times')),
            ],
            options={
                'verbose_name_plural': 'Frequencies',
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route_id', models.CharField(max_length=25, unique=True, verbose_name='route_id')),
                ('short_name', models.CharField(max_length=150, verbose_name='short name')),
                ('long_name', models.CharField(max_length=500, verbose_name='long name')),
                ('shapes', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('desc', models.CharField(max_length=250, verbose_name='Route desc')),
                ('route_type', models.CharField(choices=[('0', 'Tram, Streetcar, Light rail'), ('1', 'Subway, Metro. Any underground rail system within a metropolitan area.'), ('2', 'Rail'), ('3', 'Bus'), ('4', 'Ferry'), ('5', 'Cable car'), ('6', 'Gondola, Suspended cable car'), ('7', 'Funicular. Any rail system designed for steep inclines.')], default='2', max_length=1, verbose_name='Route type')),
                ('route_url', models.CharField(max_length=240, verbose_name='Route URL')),
                ('route_color', models.CharField(max_length=6, verbose_name='Route color')),
                ('route_text_color', models.CharField(max_length=6, verbose_name='Route text color')),
                ('route_sort_order', models.IntegerField(default=0, verbose_name='Route sort order')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stop_id', models.CharField(max_length=25, verbose_name='stop_id')),
                ('name', models.CharField(max_length=500, verbose_name='name')),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name='Location')),
                ('stop_code', models.CharField(max_length=100, verbose_name='Stop code')),
                ('stop_desc', models.CharField(max_length=500, verbose_name='Stop code')),
                ('zone_id', models.CharField(max_length=100, verbose_name='Zone ID')),
                ('location_type', models.CharField(choices=[('0', 'Stop'), ('1', 'Station'), ('2', 'Station Entrance/Exit')], default='0', max_length=1, verbose_name='Location types')),
                ('stop_timezone', models.CharField(max_length=20, verbose_name='Stop timezone')),
                ('wheelchair_boarding', models.CharField(choices=[('0', 'No wheelchair accessibility'), ('1', 'at least some vehicles at this stop can be boarded by a rider in a wheelchair'), ('2', 'wheelchair boarding is not possible at this stop')], default='0', max_length=1, verbose_name='Wheelchair boarding')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StopTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip', models.CharField(max_length=25, verbose_name='route_id')),
                ('short_name', models.CharField(max_length=150, verbose_name='short name')),
                ('long_name', models.CharField(max_length=500, verbose_name='long name')),
            ],
            options={
                'verbose_name_plural': 'Stop times',
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip_id', models.CharField(max_length=50, verbose_name='trip_id')),
                ('short_name', models.CharField(max_length=150, verbose_name='short name')),
                ('long_name', models.CharField(max_length=500, verbose_name='long name')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
